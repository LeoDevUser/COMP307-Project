<style>
    p {
      font-size: 25px;
      text-align: center;
    }

    u {
      text-decoration: none;
      border-bottom: 2px solid black;
    }

    .bottom-container {
      display:flex;
      justify-content: center;
      align-items: center;
      margin-top: 50px;
      text-align:center;

    }

    .formApperance p{
      font-size: 18px;

    }

    .formApperance h1{
      font-weight: normal;
      font-size: 20px;
    }

    .textbox {
      width: 70px;
      height: 20px;
      border: none;
      background-color: #D9D9D9;
      color: black;
      margin-left: 5px;
    }

    .submitButton {
      text-decoration: none;
      border: none;
      width: 125px;
      height: 30px;
      background-color: #ed1b2f ;
      color: white;
      font-family: 'EB Garamond', Arial, serif;
      font-size: 20px;
      transition: background-color 0.3s;
    }

    .submitButton:hover {
      background-color: #424242  ;
    }
    
    .tempSpace{
      width:10%;
    }

    #hiddenDate{
        display: none;
    }

    @media (max-width: 600px) {
      .bottom-container{
        margin-top: 0px;
      }
      .tempSpace{
        width: 3%;
      }
      .aside p{
        font-size: 23px;
      }
      
    }

  </style>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Schedule</title>
    <link rel="stylesheet" href="../css/stylesheet.css" type="text/css">
    <link href="https://fonts.googleapis.com/css2?family=EB+Garamond&display=swap" rel="stylesheet">

</head>

<body>

    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="navbar-container">
           
            <ul class="nav-links">
                <li><a href="#dashboard">Dashboard</a></li>
                <li><a href="#schedule">Schedule</a></li>
                <li style="width:125px"></li>
                <li><a href="#logout">Log Out</a></li>
            </ul>
            <img class="image" src="../images/logo2.png">
        </div>
    </nav>

    <div class="bottom-container">
      <div class="tempSpace">
      </div>
    <div class="aside" id="root" style="width:20%; height:100%">
      <form class="formApperance" id="myForm" action="/add" method="get" onsubmit="return validateForm()">
        <h1>Label:
        <input type="text" name="appointmentLabel" class="textbox"></input></h1>
        <h1>Which Class?</h1>
        <div id="classQuestion">
          <p><input type="radio" name="class" value="none"></input></p>
        </div>
        <h1>When? <input type="date" name="start"></input></h1> 
        <h1>At: <select name="time">
            <option value="7">7:00 AM</option>
            <option value="8">8:00 AM</option>
            <option value="9">9:00 AM</option>
            <option value="10">10:00 AM</option>
            <option value="11">11:00 AM</option>
            <option value="12">12:00 PM</option>
            <option value="1">1:00 PM</option>
            <option value="2">2:00 PM</option>
            <option value="3">3:00 PM</option>
            <option value="4">4:00 PM</option>
            <option value="5">5:00 PM</option>
            <option value="6">6:00 PM</option>
            </select>


        </h1>
        <h1>For 
            <select name="hours">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                </select> Hours.</h1>
        
        <h1>How many Openings?</h1>
        <p><input type="radio" name="avaliblePositions" value="userInput"></input>
        <input type="text" name="userInputAvaliblePositions"class="textbox"></input>
        </p>
        <p><input type="radio" name="avaliblePositions" id="unlimitdPositions" value="unlimited"></input>
        <label for="unlimitdPositions"> Unlimited</label></p>
        
        <h1>Repeats?</h1>
        <p><input type="radio" name="repeats" id="unlimitdPositions" value="doesRepeat" onclick="revealHiddenObject()"></input> Yes</p>
        <p><input type="radio" name="repeats" id="unlimitdPositions" value="doesNotRepeat" onclick="hideHiddenObject()""></input> No</p>

        
        <h1 id="hiddenDate">Repeats Until? <input type="date" name="end" id="reset"></input></h1> 
        <h1 id="hiddenDate"><input type="text" name="email" id="secretEmail"></input></h1> 


        <input type="submit" value="Submit" class="submitButton"></input>

      </form>
    </div>
    <div style="width:5%">
    </div>

        <!-- Replace with calendar and need to figure out what to do at differnt sizes -->
    <div class="calendar-selector" style="width:65%;margin:auto">
      <%- include('calendar.ejs'); %>
    </div>
    </div>
    <p>Or delete a time: <a href="/delete">Here!</a></p>

    <script>
      function revealHiddenObject(){
          document.getElementById("hiddenDate").style.display = "block";
      }

      function hideHiddenObject(){
          document.getElementById("hiddenDate").style.display = "none";
          document.getElementById("reset").value = "";
      }

      function validateForm(){
        const x = document.getElementById("myForm").elements;
        console.log(x["class"].checked);
        //Edge Case to be fixed. if prof only has one class a different check is needed
        //Other things to fix later: invalid dates (in the past)
        //make sure userinputinvalidpositions is an int and is positive

        if(x["appointmentLabel"].value == ""  || x["class"].value == ""
          || x["start"].value == "" || x["avaliblePositions"].value == ""
          || x["repeats"].value == ""
        ){
            alert("Form not fully filled out!");
            return false;

        }

        if(x["avaliblePositions"].value == "userInput" && x["userInputAvaliblePositions"].value == ""){
          alert("Form not fully filled out!");
          return false;
        }

        if(x["repeats"].value == "doesRepeat" && x["end"].value == ""){
          alert("Form not fully filled out!");
          return false;
        }

        return true;
      }

  </script>

    <script>
      const params = new URLSearchParams(document.location.search);
      const proffesorE = params.get("p");
      const url = `/retrieveClasses?q=${proffesorE}`;
      console.log(proffesorE);
      const passEmail = document.getElementById("secretEmail");
      passEmail.value = proffesorE;

      async function getData() {
      const response = await fetch(url);
      const json = await response.json();
      return json;
      }

      getData().then(x =>  {
      const divQuestion = document.getElementById("classQuestion");
      divQuestion.innerHTML = "";
      for(var i =0; i< x.classes.length; i++){
        var temps = x.classes[i];
        var temp = temps.split(' ').join('_');
        divQuestion.insertAdjacentHTML('beforeend', `<p><input type="radio" name="class" value=${temp}></input> ${x.classes[i]}</p>`);
      }
      if(x.clasees.length == 0){
        alert("Can not begin scheduling before setting classes!");
        document.getElementById("root").innerHTML = `<p>Click here to fill out form!</p>`;
      }
      

      });
      

    </script>





</body>